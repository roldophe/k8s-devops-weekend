apiVersion: apps/v1
kind: Deployment
metadata:
  name: core-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: core-app
  template:
    metadata:
      labels:
        app: core-app
    spec:
      containers:
        - name: core
          image: radomkhoem/core_spring:latest
          ports:
            - containerPort: 8080
          env:
            - name: PG_DB
              value: postgres-db
            - name: PG_USERNAME
              value: app_user
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: PG_HOST
              value: postgres-service
            - name: PG_PORT
              value: "5432"
            - name: ALLOWED_HOSTS
              value: "*"
          volumeMounts:
            - name: core-storage
              mountPath: /code/media/uploads
      volumes:
        - name: core-storage
          nfs:
            server: 10.17.0.2
            path: /opt/nfs/data
---
apiVersion: v1
kind: Service
metadata:
  name: core-service
spec:
  selector:
    app: core-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres-db
            - name: POSTGRES_USER
              value: app_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  postgres-password: cGFzc3dvcmQ=  # base64 encoded password for 'password'

